@charset "UTF-8";
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline; }

html {
  line-height: 1; }

ol, ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

q, blockquote {
  quotes: none; }

q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none; }

a img {
  border: none; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

html {
  box-sizing: border-box;
  outline: 0 !important;
  font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  tap-highlight-color: transparent; }

*,
*:before,
*:after {
  box-sizing: inherit;
  outline: 0 !important;
  font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  tap-highlight-color: inherit; }

@font-face {
  font-family: "gilroylight";
  src: url("fonts/gilroy_light_macroman/gilroy-light-webfont.eot");
  src: url("fonts/gilroy_light_macroman/gilroy-light-webfont.eot?#iefix") format("embedded-opentype"), url("fonts/gilroy_light_macroman/gilroy-light-webfont.woff") format("woff"), url("fonts/gilroy_light_macroman/gilroy-light-webfont.ttf") format("truetype"), url("fonts/gilroy_light_macroman/gilroy-light-webfont.svg#gilroylight") format("svg"); }

@font-face {
  font-family: "gilroyextrabold";
  src: url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.eot");
  src: url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.eot?#iefix") format("embedded-opentype"), url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.woff") format("woff"), url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.ttf") format("truetype"), url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.svg#gilroyextrabold") format("svg"); }

.animate-title {
  margin-right: 18px;
  margin-top: 100px;
  display: inline-block;
  vertical-align: top;
  opacity: 0;
  box-sizing: border-box;
  transition: all 1s ease; }

.animate-title h2 {
  background-color: #18181a;
  padding: 30px;
  color: #f1f1f1;
  font-style: italic; }

.animate-title p {
  min-height: 200px;
  background-color: #f2f2f2;
  padding: 30px;
  line-height: 1.6em; }

/* Bounce Key Frames */

@keyframes bounce {
  0% {
    transform: translateY(0); }
  25% {
    transform: translateY(100%); }
  50% {
    transform: translateY(0%); }
  75% {
    transform: translateY(50%); }
  100% {
    transform: translateY(0%); } }

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility; }

html {
  font-size: 62.5%; }

body {
  font-size: 1.5rem;
  line-height: 1.6;
  font-weight: 400;
  font-family: "gilroylight";
  color: #34363E;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  overflow-x: hidden; }

a {
  text-decoration: none;
  cursor: pointer; }

canvas {
  display: block;
  position: absolute;
  height: 100%;
  z-index: 0; }

header {
  position: fixed;
  z-index: 3;
  height: 150px;
  width: 100%;
  top: 0;
  left: 0;
  background: rgba(255, 255, 255, 0);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Force Hardware Acceleration */
  transform: translateZ(0);
  backface-visibility: hidden;
  transition: transform 0.3s; }
  header.sticky {
    transition: all 0.3s;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    background: white;
    height: 60px; }
    header.sticky .pt-main-nav {
      transition: all 0.3s;
      height: 100%;
      line-height: 60px; }
    header.sticky .pt-logo {
      transition: all 0.3s;
      transform: translatey(0); }
      header.sticky .pt-logo img {
        margin-top: 10px;
        max-width: 60%; }
  header.nav-is-visible {
    transform: translateX(-260px); }
  header::before {
    /* never visible - this is used in jQuery to check the current MQ */
    display: none;
    content: 'mobile'; }
  @media only screen and (min-width: 1170px) {
    header {
      height: 150px; }
      header.nav-is-visible {
        transform: translateX(0); }
      header::before {
        content: 'desktop'; } }

.hero {
  min-height: 100vh;
  width: 100%;
  display: table;
  text-align: center;
  padding-bottom: 8em;
  background: white url(images/group.png) no-repeat center 80px;
  background-size: 300px; }
  .hero .title {
    display: table-cell;
    vertical-align: middle; }
    .hero .title h1 {
      font-family: "gilroyextrabold";
      font-size: 5rem;
      line-height: 1.2em;
      max-width: 580px;
      margin: auto;
      letter-spacing: -1.25px;
      transform: translateY(260px); }

.pt-logo {
  transition: all 0.3s;
  display: inline-block;
  height: 100%;
  /* remove jump on iOS devices - when we fire the navigation */
  transform: translatey(29px);
  backface-visibility: hidden; }
  .pt-logo img {
    transition: all 0.3s;
    display: block;
    max-width: 100%;
    margin-top: 14px; }
  @media only screen and (min-width: 1170px) {
    .pt-logo {
      position: absolute;
      z-index: 2; } }

.pt-nav-trigger {
  cursor: pointer;
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 50px;
  /* hide text */
  overflow: hidden;
  white-space: nowrap;
  color: transparent; }
  .pt-nav-trigger span {
    /* hamburger icon created in CSS */
    position: absolute;
    height: 2px;
    width: 20px;
    top: 50%;
    margin-top: -1px;
    left: 50%;
    margin-left: -10px;
    transition: background-color 0.3s 0.3s;
    background-color: #34363E; }
    .pt-nav-trigger span::before, .pt-nav-trigger span::after {
      /* upper and lower lines of the menu icon */
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background-color: #34363E;
      /* Force Hardware Acceleration */
      transform: translateZ(0);
      backface-visibility: hidden;
      transition: transform 0.3s 0.3s; }
    .pt-nav-trigger span::before {
      transform: translateY(-6px); }
    .pt-nav-trigger span::after {
      transform: translateY(6px); }
  .nav-is-visible .pt-nav-trigger span {
    background-color: rgba(255, 255, 255, 0); }
    .nav-is-visible .pt-nav-trigger span::before {
      transform: translateY(0) rotate(-45deg); }
    .nav-is-visible .pt-nav-trigger span::after {
      transform: translateY(0) rotate(45deg); }
  @media only screen and (min-width: 1170px) {
    .pt-nav-trigger {
      display: none; } }

.pt-main-nav {
  transition: all 0.3s;
  position: fixed;
  z-index: 1;
  top: 0;
  right: 0;
  width: 260px;
  height: 100vh;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  visibility: hidden;
  background: white; }
  .pt-main-nav a {
    display: block;
    font-size: 1.3rem;
    border-bottom: 1px solid #52545C;
    color: #34363E;
    transition: transform 0.3s, opacity 0.3s; }
  .pt-main-nav li ul {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    transition: transform 0.3s;
    transform: translateX(260px); }
  .pt-main-nav.nav-is-visible {
    visibility: visible;
    transition: visibility 0s 0s; }
  .pt-main-nav.moves-out > li > a {
    /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
    transform: translateX(-100%);
    opacity: 0; }
  .pt-main-nav.moves-out > li > ul {
    transform: translateX(0); }
  .pt-main-nav .go-back a {
    padding-left: 2em; }
    .pt-main-nav .go-back a::before, .pt-main-nav .go-back a::after {
      /* arrow goes on the left side - go back button */
      left: 20px;
      transform-origin: 1px 50%; }
  @media only screen and (min-width: 1170px) {
    .pt-main-nav {
      position: static;
      visibility: visible;
      width: 100%;
      height: 150px;
      line-height: 150px;
      /* padding left = logo size + logo left position*/
      background: transparent;
      text-align: right; }
      .pt-main-nav li {
        display: inline-block;
        height: 100%; }
      .pt-main-nav li a {
        display: inline-block;
        line-height: 1;
        font-size: 1.5rem;
        text-transform: uppercase;
        border-bottom: none;
        font-family: "gilroyextrabold";
        margin-left: 2em;
        /* Prevent .pt-subnav-trigger flicker is Safari */
        transform: translateZ(0);
        backface-visibility: hidden;
        transition: all 0.3s; }
      .pt-main-nav li a:not(.pt-subnav-trigger):hover {
        backface-visibility: hidden;
        color: #239A87; } }

.pt-main-content::before {
  /* never visible - this is used in jQuery to check the current MQ */
  display: none;
  content: 'mobile'; }
  @media only screen and (min-width: 1170px) {
    .pt-main-content::before {
      content: 'desktop'; } }

.pt-main-content {
  position: relative;
  z-index: 2;
  min-height: 100vh;
  transition: transform 0.3s; }
  .pt-main-content.nav-is-visible {
    transform: translateX(-260px); }
  @media only screen and (min-width: 1170px) {
    .pt-main-content.nav-is-visible {
      transform: translateX(0); } }

.playbutton {
  display: block;
  height: 102px;
  width: 102px;
  background: rgba(35, 154, 135, 0);
  border-radius: 50%;
  margin: 3em auto; }

.animate-reveal {
  opacity: 0;
  animation: reveal 1400ms cubic-bezier(1, 1, 1, 1) 1 normal forwards; }

.animate-headline {
  animation-delay: 2800ms; }

.animate-play {
  animation-delay: 3800ms; }

@keyframes reveal {
  0% {
    opacity: 0;
    transform: translateY(10%); }
  100% {
    opacity: 1;
    transform: translateY(1); } }

@keyframes fadeIn {
  from {
    transform: scale(0); }
  to {
    transform: scale(1); } }

@keyframes spin {
  to {
    transform: rotate(360deg); } }

.stroke-dotted {
  opacity: 0;
  stroke-dasharray: 1,5;
  stroke-width: 1.2px;
  fill: rgba(35, 154, 135, 0.01);
  transform-origin: 50% 50%;
  animation: spin 5s infinite linear;
  transition: opacity 1s ease, stroke-width 1s ease; }

.stroke-solid {
  stroke-dashoffset: 0;
  stroke-dashArray: 300;
  stroke-width: 2px;
  transition: stroke-dashoffset 1s ease, opacity 1s ease; }

.icon {
  transform-origin: 50% 50%;
  transition: transform 20ms ease-out;
  transition: stroke-dashoffset 1s ease, all 1s ease;
  transform: translateY(10%); }

#play:hover .stroke-dotted {
  stroke-width: 1.5px;
  opacity: 1; }

#play:hover .stroke-solid {
  opacity: 0;
  stroke-dashoffset: 100; }

#play:hover .icon {
  transform: translateY(10%); }

#play {
  cursor: pointer; }

.overlay {
  width: 100%;
  height: 100vh;
  background: black;
  position: fixed;
  z-index: 23333333;
  top: 0;
  opacity: 0;
  left: -100%;
  transition: opacity 1.5s;
  -webkit-transition: opacity 1.5s; }

.video-container {
  width: 95%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%); }

.close {
  width: 20px;
  fill: white;
  position: absolute;
  right: 0;
  top: -30px; }

.close:hover {
  fill: rgba(255, 255, 255, 0.5);
  cursor: pointer; }

.show {
  opacity: 1; }

.features {
  text-align: center;
  background: white; }
  .features h2 {
    margin-top: 170px;
    font-size: 7.2rem;
    font-family: "gilroyextrabold";
    max-width: 600px;
    line-height: 1.2em;
    display: inline-block;
    color: #239A87;
    letter-spacing: -1.8px; }
    .features h2::after {
      content: '';
      background: #239A87;
      display: block;
      height: 4px;
      width: 22px;
      margin: 34px auto 60px; }
  .features aside,
  .features figure {
    text-align: left; }
    .features aside h3,
    .features figure h3 {
      color: #34363E;
      font-size: 2.8rem;
      letter-spacing: -0.7px;
      line-height: 2.8rem;
      font-family: "gilroyextrabold";
      margin-bottom: 1rem; }
    .features aside p,
    .features figure p {
      font-size: 1.8rem;
      letter-spacing: -0.45px;
      line-height: 2.8rem;
      margin-bottom: 3rem; }
  .features aside {
    max-width: 46%; }
  .features figure {
    transform: translateY(-1%); }

.testimonials-quotes-list {
  background: white;
  padding-top: 9px;
  padding-bottom: 74px;
  border-top: 1px solid #ededed; }
  .testimonials-quotes-list .quote-list {
    display: -ms-flexbox;
    display: flex;
    max-width: 1280px;
    margin: auto;
    padding-right: 30px;
    padding-left: 30px;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -ms-flex-pack: justify;
    justify-content: space-between; }
    .testimonials-quotes-list .quote-list .quote-item {
      margin-top: 68px;
      -ms-flex-preferred-size: 47%;
      flex-basis: 47%;
      -ms-flex-negative: 0;
      flex-shrink: 0;
      color: #181818;
      font-size: 18px;
      font-weight: 400;
      line-height: 145%;
      text-align: left; }
      .testimonials-quotes-list .quote-list .quote-item .quote {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: justify;
        justify-content: space-between; }
        .testimonials-quotes-list .quote-list .quote-item .quote blockquote {
          padding-left: 20px;
          position: relative; }
          .testimonials-quotes-list .quote-list .quote-item .quote blockquote::before {
            top: -16px;
            content: "";
            color: #ebebeb;
            font-size: 47px;
            width: 65px;
            height: 67px;
            position: absolute;
            background: url(images/quo.png);
            background-size: 65px 67px;
            left: -5px;
            z-index: -1; }
          .testimonials-quotes-list .quote-list .quote-item .quote blockquote p {
            color: #212121;
            font-size: 18px;
            font-weight: 400;
            line-height: 150%;
            width: 100%; }
        .testimonials-quotes-list .quote-list .quote-item .quote .person {
          margin-top: 9px;
          -ms-flex-preferred-size: 110px;
          flex-basis: 110px;
          -ms-flex-negative: 0;
          flex-shrink: 0;
          color: #9e9e9e;
          font-size: 14px;
          font-weight: normal;
          line-height: 18px; }
          .testimonials-quotes-list .quote-list .quote-item .quote .person .company {
            display: block;
            color: #181818;
            font-weight: 600; }
          .testimonials-quotes-list .quote-list .quote-item .quote .person .name {
            margin-top: 10px;
            display: block; }
          .testimonials-quotes-list .quote-list .quote-item .quote .person .figcaption {
            line-height: 17px; }

.flying-products {
  background: #34363E url(images/pattern.png);
  background-size: 50%;
  min-height: 120vh;
  text-align: center;
  position: relative; }
  .flying-products .bigbutton {
    display: inline-block;
    position: absolute;
    bottom: 5em;
    width: 358px;
    height: 102px;
    border-radius: 100px;
    background: rgba(0, 0, 0, 0.6);
    line-height: 102px;
    left: 50%;
    margin-left: -179px;
    font-family: "gilroyextrabold";
    font-size: 2.4rem;
    color: white;
    border: 2px solid white;
    transition: all 0.3s; }
    .flying-products .bigbutton:hover {
      background: black; }
  .flying-products img {
    position: absolute; }
    .flying-products img.product-one {
      width: 600px;
      left: 50%;
      margin-left: -300px;
      top: 28em; }
    .flying-products img.product-two {
      width: 560px;
      left: 56%;
      top: 45em; }
    .flying-products img.product-three {
      width: 400px;
      left: 16%;
      top: 40em; }
  .flying-products h2 {
    margin-top: 200px;
    font-size: 7.2rem;
    font-family: "gilroyextrabold";
    max-width: 10em;
    line-height: 1.2em;
    display: inline-block;
    color: white;
    letter-spacing: -1.8px; }
    .flying-products h2::after {
      content: '';
      background: white;
      display: block;
      height: 4px;
      width: 22px;
      margin: 34px auto 60px; }

.map-partners {
  background: white url(images/map.jpg) no-repeat center 400px;
  background-size: 60%;
  padding-bottom: 8em;
  text-align: center;
  position: relative;
  z-index: -1; }
  .map-partners h2 {
    margin-top: 200px;
    font-size: 7.2rem;
    font-family: "gilroyextrabold";
    max-width: 10em;
    line-height: 1.2em;
    display: inline-block;
    color: #34363E;
    letter-spacing: -1.8px; }
    .map-partners h2::after {
      content: '';
      background: #34363E;
      display: block;
      height: 4px;
      width: 22px;
      margin: 34px auto 60px; }

.list-partners {
  background: white;
  text-align: center;
  position: relative;
  padding-bottom: 8em; }
  .list-partners h2 {
    margin-top: 200px;
    font-size: 7.2rem;
    font-family: "gilroyextrabold";
    max-width: 10em;
    line-height: 1.2em;
    display: inline-block;
    color: #34363E;
    letter-spacing: -1.8px; }
    .list-partners h2::after {
      content: '';
      background: #34363E;
      display: block;
      height: 4px;
      width: 22px;
      margin: 34px auto 60px; }
  .list-partners .container .clogo {
    background: white;
    border: 1px solid #ededed;
    line-height: 383px;
    min-height: 383px;
    transform: scale(1.04);
    transition: all 0.3s; }
    .list-partners .container .clogo img.products {
      position: absolute;
      opacity: 0;
      transition: all 0.3s;
      transform: scale(0.6);
      left: 0;
      top: -30px; }
    .list-partners .container .clogo img.logos {
      transition: all 0.3s;
      transform: scale(0.5);
      vertical-align: middle; }
    .list-partners .container .clogo:hover {
      box-shadow: 0 2px 34px rgba(0, 0, 0, 0.08);
      z-index: 99;
      margin-top: -15px;
      margin-left: 5px;
      transform: scale(1.06); }
      .list-partners .container .clogo:hover img.logos {
        transform: scale(0.2);
        margin-bottom: -280px; }
      .list-partners .container .clogo:hover img.products {
        opacity: 1; }
    .list-partners .container .clogo h4 {
      font-size: 3.2rem;
      line-height: 4.2rem;
      font-family: "gilroyextrabold";
      width: 200px;
      display: inline-block;
      transform: translatey(-30px); }
      .list-partners .container .clogo h4::after {
        content: '';
        background: #34363E;
        display: block;
        height: 4px;
        width: 22px;
        margin: 34px auto 60px; }
    .list-partners .container .clogo.last {
      background: #F9F9F9; }
    .list-partners .container .clogo a {
      position: absolute;
      left: 50%;
      width: 190px;
      margin-left: -95px;
      clear: both;
      height: 51px;
      background: #239A87;
      color: white;
      font-family: "gilroyextrabold";
      display: inherit;
      line-height: 52px;
      bottom: 18%;
      border-radius: 30px; }

.pt-title {
  position: relative;
  height: 160px;
  line-height: 230px;
  text-align: center; }
  .pt-title h1 {
    font-size: 2.4rem;
    font-weight: 700; }
  @media only screen and (min-width: 768px) {
    .pt-title {
      line-height: 250px; } }
  @media only screen and (min-width: 1170px) {
    .pt-title {
      height: 200px;
      line-height: 300px; }
      .pt-title h1 {
        font-size: 3rem; } }

.pt-intro {
  width: 90%;
  max-width: 768px;
  text-align: center; }

.pt-intro {
  margin: 4em auto; }
  @media only screen and (min-width: 768px) {
    .pt-intro {
      margin: 5em auto; } }
  @media only screen and (min-width: 1170px) {
    .pt-intro {
      margin: 6em auto; } }

.pt-headline {
  font-size: 3rem;
  line-height: 1.2; }
  @media only screen and (min-width: 768px) {
    .pt-headline {
      font-size: 4.4rem;
      font-weight: 300; } }
  @media only screen and (min-width: 1170px) {
    .pt-headline {
      font-size: 6rem; } }

.pt-words-wrapper {
  display: inline-block;
  position: relative;
  text-align: center;
  margin-top: 3em; }
  .pt-words-wrapper b {
    display: inline-block;
    position: absolute;
    text-align: center;
    white-space: nowrap;
    font-family: "gilroyextrabold";
    font-size: 4.8rem;
    line-height: .8em;
    color: #239A87;
    left: 0;
    top: 0; }
    .pt-words-wrapper b span {
      font-size: 1.8rem;
      color: #34363E; }
    .pt-words-wrapper b.is-visible {
      position: relative; }
  .no-js .pt-words-wrapper b {
    opacity: 0; }
    .no-js .pt-words-wrapper b.is-visible {
      opacity: 1; }

.group {
  background: url(images/group.png) no-repeat center 80px;
  background-size: 300px;
  width: 100%;
  z-index: -1; }

.group-pic {
  background: rgba(255, 255, 255, 0.91);
  padding: 30px 0; }

.products-m {
  padding: 8em 0 6em; }
  .products-m.productone {
    background: #00B9E5 url(images/pattern-white.png);
    background-size: 50%;
    text-align: center; }
    .products-m.productone aside,
    .products-m.productone figure {
      text-align: left; }
      .products-m.productone aside h3,
      .products-m.productone figure h3 {
        color: white;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 11rem; }
        .products-m.productone aside h3::after,
        .products-m.productone figure h3::after {
          content: '';
          background: white;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
    .products-m.productone aside {
      max-width: 46%; }
    .products-m.productone figure {
      transform: translateY(-1%); }
  .products-m.producttwo {
    background: #FF96AC url(images/pattern-white.png);
    background-size: 50%;
    text-align: center;
    min-height: 820px; }
    .products-m.producttwo aside,
    .products-m.producttwo figure {
      text-align: left; }
      .products-m.producttwo aside h3,
      .products-m.producttwo figure h3 {
        color: white;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 11rem; }
        .products-m.producttwo aside h3::after,
        .products-m.producttwo figure h3::after {
          content: '';
          background: white;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
    .products-m.producttwo aside {
      max-width: 46%; }
    .products-m.producttwo figure {
      transform: translateY(16%); }
  .products-m.productthree {
    background: #42D584 url(images/pattern-white.png);
    background-size: 50%;
    text-align: center;
    min-height: 820px; }
    .products-m.productthree aside,
    .products-m.productthree figure {
      text-align: left; }
      .products-m.productthree aside h3,
      .products-m.productthree figure h3 {
        min-width: 530px;
        color: white;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 11rem; }
        .products-m.productthree aside h3::after,
        .products-m.productthree figure h3::after {
          content: '';
          background: white;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
    .products-m.productthree aside {
      max-width: 46%; }
  .products-m.productfour {
    background: #FDF49D url(images/pattern-on.png);
    background-size: 50%;
    text-align: center;
    min-height: 820px; }
    .products-m.productfour aside,
    .products-m.productfour figure {
      text-align: left; }
      .products-m.productfour aside h3,
      .products-m.productfour figure h3 {
        min-width: 530px;
        color: #34363E;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 11rem; }
        .products-m.productfour aside h3::after,
        .products-m.productfour figure h3::after {
          content: '';
          background: #34363E;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
    .products-m.productfour aside {
      max-width: 46%; }
    .products-m.productfour figure {
      transform: translateY(18%); }

.product-list {
  background: white;
  display: inline-block; }
  .product-list img {
    width: 100%;
    opacity: 0;
    box-sizing: border-box;
    transition: opacity 500ms ease-in-out 100ms; }
    .product-list img.loading {
      background: red;
      height: 10px;
      width: 10px;
      display: block; }
    .product-list img.b-loaded {
      opacity: 1; }

.products-s {
  padding: 6em 0; }
  .products-s section {
    width: 100%; }
  .products-s .container .bar-four {
    background: white;
    margin-bottom: 1em;
    min-height: 400px;
    line-height: 400px; }
    .products-s .container .bar-four img {
      vertical-align: middle; }
  .products-s.productone {
    background: #00B9E5 url(images/pattern-white.png);
    background-size: 50%;
    margin-top: 10em;
    text-align: center; }
    .products-s.productone aside,
    .products-s.productone figure {
      text-align: left; }
      .products-s.productone aside h3,
      .products-s.productone figure h3 {
        color: white;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 0; }
        .products-s.productone aside h3::after,
        .products-s.productone figure h3::after {
          content: '';
          background: white;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
    .products-s.productone figure {
      transform: translateY(-1%); }
  .products-s.producttwo {
    background: #FF96AC url(images/pattern-white.png);
    background-size: 50%;
    text-align: center;
    margin-top: 10em; }
    .products-s.producttwo aside,
    .products-s.producttwo figure {
      text-align: left; }
      .products-s.producttwo aside h3,
      .products-s.producttwo figure h3 {
        color: white;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 0; }
        .products-s.producttwo aside h3::after,
        .products-s.producttwo figure h3::after {
          content: '';
          background: white;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
    .products-s.producttwo figure {
      transform: translateY(16%); }
  .products-s.productthree {
    background: #42D584 url(images/pattern-white.png);
    background-size: 50%;
    text-align: center;
    margin-top: 10em; }
    .products-s.productthree aside,
    .products-s.productthree figure {
      text-align: left; }
      .products-s.productthree aside h3,
      .products-s.productthree figure h3 {
        min-width: 530px;
        color: white;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 0; }
        .products-s.productthree aside h3::after,
        .products-s.productthree figure h3::after {
          content: '';
          background: white;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
  .products-s.productfour {
    background: #FDF49D url(images/pattern-on.png);
    background-size: 50%;
    text-align: center;
    margin-top: 10em; }
    .products-s.productfour aside,
    .products-s.productfour figure {
      text-align: left; }
      .products-s.productfour aside h3,
      .products-s.productfour figure h3 {
        min-width: 530px;
        color: #34363E;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 0; }
        .products-s.productfour aside h3::after,
        .products-s.productfour figure h3::after {
          content: '';
          background: #34363E;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
    .products-s.productfour figure {
      transform: translateY(18%); }

.produce-a {
  padding: 6em 0; }
  .produce-a section {
    width: 100%; }
  .produce-a .content {
    padding: 2em 4em; }
    .produce-a .content h3 {
      color: #34363E;
      font-size: 5.6rem;
      font-family: "gilroyextrabold";
      text-align: left;
      margin-bottom: .5em; }
    .produce-a .content p {
      color: #34363E;
      text-align: left;
      margin-bottom: 1em;
      font-size: 1.8rem; }
  .produce-a .container .product-list {
    background: transparent;
    margin-bottom: 1em; }
  .produce-a .container img {
    vertical-align: middle; }
  .produce-a.produce {
    background: white;
    background-size: 50%;
    margin-top: 5em;
    text-align: center; }
    .produce-a.produce aside,
    .produce-a.produce figure {
      text-align: left; }
      .produce-a.produce aside h3,
      .produce-a.produce figure h3 {
        color: #34363E;
        font-size: 7.2rem;
        letter-spacing: -1.8px;
        line-height: 8.4rem;
        font-family: "gilroyextrabold";
        margin: 0; }
        .produce-a.produce aside h3::after,
        .produce-a.produce figure h3::after {
          content: '';
          background: #34363E;
          display: block;
          height: 8px;
          width: 42px;
          margin: 34px 4px 60px; }
    .produce-a.produce figure {
      transform: translateY(-1%); }

.whitebutton {
  background: white;
  font-size: 1.8rem;
  line-height: 2.9rem;
  color: #34363E;
  font-family: "gilroyextrabold";
  padding: 25px 40px;
  border-radius: 100px;
  margin: 11rem; }

.pt-headline.rotate-2 .pt-words-wrapper {
  perspective: 300px; }

.pt-headline.rotate-2 i, .pt-headline.rotate-2 em {
  display: inline-block;
  backface-visibility: hidden; }

.pt-headline.rotate-2 b {
  opacity: 0; }

.pt-headline.rotate-2 i {
  -ms-transform-style: preserve-3d;
  -o-transform-style: preserve-3d;
  transform-style: preserve-3d;
  transform: translateZ(-20px) rotateX(90deg);
  opacity: 0; }
  .is-visible .pt-headline.rotate-2 i {
    opacity: 1; }
  .pt-headline.rotate-2 i.in {
    animation: pt-rotate-2-in 0.4s forwards; }
  .pt-headline.rotate-2 i.out {
    animation: pt-rotate-2-out 0.4s forwards; }

.pt-headline.rotate-2 em {
  transform: translateZ(20px); }

.no-csstransitions .pt-headline.rotate-2 i {
  transform: rotateX(0deg);
  opacity: 0; }
  .no-csstransitions .pt-headline.rotate-2 i em {
    transform: scale(1); }

.no-csstransitions .pt-headline.rotate-2 .is-visible i {
  opacity: 1; }

@keyframes pt-rotate-2-in {
  0% {
    opacity: 0;
    transform: translateZ(-20px) rotateX(90deg); }
  60% {
    opacity: 1;
    transform: translateZ(-20px) rotateX(-10deg); }
  100% {
    opacity: 1;
    transform: translateZ(-20px) rotateX(0deg); } }

@keyframes pt-rotate-2-out {
  0% {
    opacity: 1;
    transform: translateZ(-20px) rotateX(0); }
  60% {
    opacity: 0;
    transform: translateZ(-20px) rotateX(-100deg); }
  100% {
    opacity: 0;
    transform: translateZ(-20px) rotateX(-90deg); } }

.pt-headline.clip span {
  display: inline-block;
  padding: .2em 0; }

.pt-headline.clip .pt-words-wrapper {
  overflow: hidden;
  vertical-align: top; }
  .pt-headline.clip .pt-words-wrapper::after {
    /* line */
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 2px;
    height: 100%; }

.pt-headline.clip b {
  opacity: 0; }
  .pt-headline.clip b.is-visible {
    opacity: 1; }

.owl-pagination {
  position: absolute;
  z-index: 100;
  left: 0;
  right: 0;
  bottom: 65px;
  text-align: center;
  -webkit-tap-highlight-color: transparent; }
  .owl-pagination .owl-page {
    display: inline-block; }
    .owl-pagination .owl-page span {
      width: 10px;
      height: 10px;
      margin: 0 3px;
      background: white;
      display: block;
      -webkit-backface-visibility: visible;
      transition: opacity 200ms ease;
      border-radius: 30px; }
    .owl-pagination .owl-page.active span {
      background: #239A87; }

.owl-carousel {
  position: relative;
  min-height: 840px;
  height: 100%;
  position: absolute;
  bottom: 0;
  top: 0;
  width: 20em;
  height: 8em;
  background: rgba(255, 255, 255, 0.5); }
  .owl-carousel .text {
    position: absolute;
    top: 300px;
    left: 300px; }
  .owl-carousel h3 {
    color: white;
    font-size: 4.8rem;
    line-height: 5.8rem;
    font-family: "gilroyextrabold";
    letter-spacing: -0.8px;
    margin-bottom: .5em; }
  .owl-carousel p {
    display: block;
    color: white;
    font-size: 1.8rem;
    line-height: 2.8rem;
    font-family: "gilroylight";
    letter-spacing: -0.8px;
    max-width: 500px; }
  .owl-carousel div:not(.owl-controls) {
    height: 100%; }
  .owl-carousel .owl-slide {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center; }
  .owl-carousel .owl-controls {
    position: absolute;
    left: 0;
    right: 0; }
    .owl-carousel .owl-controls .owl-buttons div {
      position: absolute;
      top: 0;
      bottom: 0;
      display: inline-block;
      zoom: 1;
      margin: 0;
      width: 50px;
      height: 30px;
      line-height: 25px;
      text-align: center;
      font-size: .9em;
      border-radius: 3px;
      color: #FFF;
      background: #000;
      opacity: .6;
      text-transform: capitalize; }
    .owl-carousel .owl-controls .owl-buttons .owl-prev {
      left: 5px; }
    .owl-carousel .owl-controls .owl-buttons .owl-next {
      right: 5px; }

.footer_spacer {
  position: relative;
  z-index: -1;
  height: 32em;
  pointer-events: none; }

footer {
  height: 34em;
  background: #239A87 url(images/pattern-light.png);
  background-size: 50%;
  margin-top: 0;
  position: fixed;
  z-index: -1000;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  padding-top: 0;
  border-top: 0;
  transition: border .3s ease,padding .3s ease;
  border: 0 solid #fff; }
  footer:hover {
    padding: 0;
    padding-top: 0;
    border: 1em solid white;
    border-top: 0; }
  footer.footer-small {
    margin: 0;
    min-height: 40px; }
    footer.footer-small.dark {
      background: #34363E;
      background-size: 50%; }
    footer.footer-small nav {
      padding: 8em; }
  footer .sc-fb:before,
  footer .sc-tw:before,
  footer .sc-in:before {
    content: '';
    width: 24px;
    height: 16px;
    display: inline-block;
    margin: 0 0 -3px; }
  footer .sc-fb:before {
    background: url(images/fb.svg) no-repeat; }
  footer .sc-tw:before {
    background: url(images/tw.svg) no-repeat; }
  footer .sc-in:before {
    background: url(images/in.svg) no-repeat; }
  footer::after {
    margin: 0 0 20px;
    content: '© 2016 PETEKPLASTIK, INC.';
    display: block;
    font-size: 11px;
    color: white;
    text-align: center; }
  footer h5 {
    font-family: "gilroyextrabold";
    color: white;
    margin-bottom: 16px; }
  footer a {
    color: white;
    margin-bottom: 16px; }
  footer p {
    color: white; }
  footer nav {
    padding-top: 8em; }

.rotate {
  color: rgba(255, 255, 255, 0.5);
  position: absolute;
  right: 0;
  font-size: 11px;
  bottom: 20em;
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  -o-transform: rotate(-90deg);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); }
  .rotate strong {
    font-family: "gilroyextrabold"; }

@keyframes {
  fluidboxLoading {
    0% {
      transform: translate(-50%, -50%) rotateX(0) rotateY(0); }
    50% {
      transform: translate(-50%, -50%) rotateX(-180deg) rotateY(0); }
    100% {
      transform: translate(-50%, -50%) rotateX(-180deg) rotateY(-180deg); } } }

.fluidbox {
  outline: none; }

.fluidbox__overlay {
  background-color: rgba(255, 255, 255, 0.85);
  cursor: pointer;
  cursor: zoom-out;
  opacity: 0;
  pointer-events: none;
  position: fixed;
  top: -100%;
  left: 0;
  bottom: -100%;
  right: 0;
  transition: all 0.5s ease-in-out; }
  .fluidbox--opened .fluidbox__overlay {
    pointer-events: auto; }

.fluidbox__wrap {
  background-position: center center;
  background-size: cover;
  margin: 0 auto;
  position: relative;
  transition: all 0.5s ease-in-out; }

.fluidbox__thumb {
  transition: opacity 0s ease-in-out 0s;
  /* To prevent flickering, we delay the showing of the image */ }
  .fluidbox--closed .fluidbox__thumb {
    transition: opacity 0s ease-in-out 0s; }

.fluidbox__ghost {
  background-size: 100% 100%;
  background-position: center center;
  background-repeat: no-repeat;
  position: absolute;
  transition-duration: 0s, 0.5s;
  transition-delay: 0s;
  transition-property: opacity, transform; }
  .fluidbox--opened .fluidbox__ghost {
    cursor: pointer;
    cursor: zoom-out; }
  .fluidbox--closed .fluidbox__ghost {
    transition-delay: 0.5s, 0s; }

.fluidbox__loader {
  opacity: 0;
  perspective: 200px;
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0; }
  .fluidbox__loader::before {
    /* You can replace this with any color you want, or even a loading gif if desired */
    background-color: rgba(255, 255, 255, 0.85);
    content: '';
    transform-style: preserve-3d;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20%;
    padding-bottom: 20%;
    transform: translate(-50%, -50%);
    transition-property: transform;
    transition-duration: 0.5s;
    transition-delay: 0s; }

.fluidbox--loading .fluidbox__loader {
  opacity: 1;
  transition: opacity 0.5s ease-in-out 0.5s; }
  .fluidbox--loading .fluidbox__loader::before {
    animation: fluidboxLoading 1s 0s infinite ease-in-out forwards; }

#map {
  min-height: 100vh; }

.pin-wrap {
  position: absolute;
  width: 100px;
  height: 100px;
  margin-top: -120.71068px;
  margin-left: -50px;
  transform-origin: 50% 120.71068% 0; }

.pin {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  margin-top: -50px;
  margin-left: -50px;
  transform-origin: 50% 120.71068% 0; }

.pin::after {
  position: absolute;
  display: block;
  box-sizing: border-box;
  width: 100px;
  height: 100px;
  content: '';
  transform: rotateZ(-45deg);
  border: 20px solid #239A87;
  border-radius: 50% 50% 50% 50%; }

.pin::before {
  position: absolute;
  display: block;
  box-sizing: border-box;
  width: 100px;
  height: 100px;
  content: '';
  transform: rotateZ(-45deg);
  border: 18px solid #1a7063;
  border-radius: 50% 50% 50% 0; }

.shadow {
  position: absolute; }

.shadow::after {
  position: absolute;
  left: -125px;
  display: block;
  width: 50px;
  height: 50px;
  margin-top: -25px;
  content: '';
  transform: rotateX(55deg);
  border-radius: 50%;
  box-shadow: rgba(0, 0, 0, 0.5) 100px 0 20px; }

.pulse {
  position: absolute;
  margin-top: -50px;
  margin-left: -50px;
  transform: rotateX(55deg); }

.pulse::after {
  display: block;
  width: 100px;
  height: 100px;
  content: '';
  animation: pulsate 1s ease-out;
  animation-delay: 1.1s;
  animation-iteration-count: infinite;
  opacity: 0;
  border-radius: 50%;
  box-shadow: 0 0 1px 2px rgba(0, 0, 0, 0.5);
  box-shadow: 0 0 6px 3px #239a87; }

@keyframes pulsate {
  0% {
    transform: scale(0.1, 0.1);
    opacity: 0; }
  50% {
    opacity: 1; }
  100% {
    transform: scale(1.2, 1.2);
    opacity: 0; } }

.tags {
  font-weight: 300; }

.list-label {
  font-family: Raleway, 'Century Gothic', CenturyGothic, AppleGothic, sans-serif;
  font-weight: 400; }

.animations a {
  line-height: 42px;
  display: block;
  box-sizing: border-box;
  height: 44px;
  margin: 0 5px;
  padding: 0 10px;
  text-decoration: none;
  color: #239A87;
  border: 2px solid #239A87;
  border-radius: 22px;
  transition: background-color 0.3s, color 0.3s; }

.animations a:hover {
  color: white;
  background: #239A87; }

.container .bar, footer .container .bar-first, footer .container .bar, .produce-a .container .bar-three, footer .container .bar-last, .list-partners .container .clogo, .products-s .container .bar-four, .produce-a .container .bar-four, .features aside, .products-m.productone aside, .products-m.productone figure, .products-m.producttwo aside, .products-m.producttwo figure, .products-m.productthree aside, .products-m.productthree figure, .products-m.productfour aside, .products-m.productfour figure, .products-s.productone figure, .products-s.producttwo figure, .products-s.productthree figure, .products-s.productfour figure, .produce-a .container .bar-five, .produce-a.produce figure, .features figure, .produce-a .container .bar-six, .produce-a .container .bar-seven, .products-s.productone aside, .products-s.producttwo aside, .products-s.productthree aside, .products-s.productfour aside, .produce-a .container .bar-twelve, .produce-a.produce aside {
  margin-right: 0.52083%;
  margin-left: 0.52083%; }

.container .bar, footer .container .bar-first, footer .container .bar, .produce-a .container .bar-three, footer .container .bar-last, .list-partners .container .clogo, .products-s .container .bar-four, .produce-a .container .bar-four, .features aside, .products-m.productone aside, .products-m.productone figure, .products-m.producttwo aside, .products-m.producttwo figure, .products-m.productthree aside, .products-m.productthree figure, .products-m.productfour aside, .products-m.productfour figure, .products-s.productone figure, .products-s.producttwo figure, .products-s.productthree figure, .products-s.productfour figure, .produce-a .container .bar-five, .produce-a.produce figure, .features figure, .produce-a .container .bar-six, .produce-a .container .bar-seven, .products-s.productone aside, .products-s.producttwo aside, .products-s.productthree aside, .products-s.productfour aside, .produce-a .container .bar-twelve, .produce-a.produce aside {
  padding-right: 0;
  padding-left: 0; }

.container, .list-partners .container, .products-s .container, .produce-a .container, footer .container {
  margin: auto;
  max-width: 1280px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  box-sizing: border-box; }

.container .bar {
  -ms-flex: auto;
  flex: auto;
  box-sizing: border-box; }

footer .container .bar-first {
  width: 7.29167%;
  box-sizing: border-box; }

footer .container .bar {
  width: 15.62501%;
  box-sizing: border-box; }

.produce-a .container .bar-three, footer .container .bar-last {
  width: 23.95834%;
  box-sizing: border-box; }

.list-partners .container .clogo, .products-s .container .bar-four, .produce-a .container .bar-four {
  width: 32.29167%;
  box-sizing: border-box; }

.features aside, .products-m.productone aside, .products-m.productone figure, .products-m.producttwo aside, .products-m.producttwo figure, .products-m.productthree aside, .products-m.productthree figure, .products-m.productfour aside, .products-m.productfour figure, .products-s.productone figure, .products-s.producttwo figure, .products-s.productthree figure, .products-s.productfour figure, .produce-a .container .bar-five, .produce-a.produce figure {
  width: 40.62501%;
  box-sizing: border-box; }

.features figure, .produce-a .container .bar-six {
  width: 48.95834%;
  box-sizing: border-box; }

.produce-a .container .bar-seven {
  width: 57.29167%;
  box-sizing: border-box; }

.products-s.productone aside, .products-s.producttwo aside, .products-s.productthree aside, .products-s.productfour aside, .produce-a .container .bar-twelve, .produce-a.produce aside {
  width: 98.95834%;
  box-sizing: border-box; }

.features figure {
  margin-left: 8.85416%; }

.products-m.productone figure, .products-m.producttwo figure, .products-m.productthree figure, .products-m.productfour figure, .products-s.productone figure, .products-s.producttwo figure, .products-s.productthree figure, .products-s.productfour figure, .produce-a.produce figure {
  margin-left: 17.1875%; }

.hero {
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-line-pack: center;
  align-content: center; }

/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=data:application/json;base64, */
